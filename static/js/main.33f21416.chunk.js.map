{"version":3,"sources":["CurrencyRow.jsx","App.jsx","index.js"],"names":["CurrencyRow","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","options","sort","map","option","value","type","className","onChange","BASE_URL","App","toAmount","fromAmout","useState","setCurrencyOptions","formCurrency","setFormCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","time","setTime","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","date","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEe,SAASA,EAAT,GAMX,IALHC,EAKE,EALFA,gBACAC,EAIE,EAJFA,iBACAC,EAGE,EAHFA,iBACAC,EAEE,EAFFA,OACAC,EACE,EADFA,eAEMC,EAAUL,EAAgBM,OAAOC,KAAI,SAAAC,GAAM,OAChD,wBAAqBC,MAAOD,EAA5B,SACEA,GADWA,MAId,OACC,gCACC,uBACCE,KAAK,SACLC,UAAU,QACVF,MAAON,EACPS,SAAUR,IAEX,wBAAQQ,SAAUV,EAAkBO,MAAOR,EAA3C,SACEI,OCnBL,IAAMQ,EAAW,yCA2EFC,MAzEf,WAAgB,IASXC,EAAUC,EATA,EACgCC,mBAAS,IADzC,mBACPjB,EADO,KACUkB,EADV,OAE0BD,mBAAS,GAFnC,mBAEPE,EAFO,KAEOC,EAFP,OAGsBH,mBAAS,GAH/B,mBAGPI,EAHO,KAGKC,EAHL,OAI0BL,mBAAS,GAJnC,mBAIPM,EAJO,KAIOC,EAJP,OAKcP,mBAAS,GALvB,mBAKPd,EALO,KAKCsB,EALD,OAM0CR,oBAAS,GANnD,mBAMPS,EANO,KAMeC,EANf,OAOUV,mBAAS,IAPnB,mBAOPW,EAPO,KAODC,EAPC,KAkDd,OAxCIH,EAEHX,GADAC,EAAYb,GACWoB,EAGvBP,GADAD,EAAWZ,GACYoB,EAGxBO,qBAAU,WACTC,MAAMlB,GACJmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CrB,EAAmB,CAACiB,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDnB,EAAgBe,EAAKK,MACrBlB,EAAcc,GACdZ,EAAgBW,EAAKI,MAAMH,IAC3BP,EAAQM,EAAKM,WAEb,IAEHX,qBAAU,WACY,IAAjBX,GAAqC,IAAfE,GACzBU,MAAM,GAAD,OAAIlB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAChDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIX,EAAgBW,EAAKI,MAAMlB,SAEzC,CAACF,EAAcE,IAcjB,qCACC,yCACA,uDAA0BO,KAC1B,cAAC7B,EAAD,CACCC,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAlB0B,SAAAwC,GAAC,OAAItB,EAAgBsB,EAAEC,OAAOlC,QAmBxDN,OAAQa,EACRZ,eAjB4B,SAAAsC,GAC9BjB,EAAUiB,EAAEC,OAAOlC,OACnBkB,GAAwB,MAiBvB,qBAAKhB,UAAU,SAAf,eACA,cAACZ,EAAD,CACCC,gBAAiBA,EACjBC,iBAAkBoB,EAClBnB,iBAzBwB,SAAAwC,GAAC,OAAIpB,EAAcoB,EAAEC,OAAOlC,QA0BpDN,OAAQY,EACRX,eArB0B,SAAAsC,GAC5BjB,EAAUiB,EAAEC,OAAOlC,OACnBkB,GAAwB,UClD1BiB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.33f21416.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CurrencyRow({\r\n\tcurrencyOptions,\r\n\tselectedCurrency,\r\n\tonChangeCurrency,\r\n\tamount,\r\n\tonChangeAmount,\r\n}) {\r\n\tconst options = currencyOptions.sort().map(option => (\r\n\t\t<option key={option} value={option}>\r\n\t\t\t{option}\r\n\t\t</option>\r\n\t));\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input\r\n\t\t\t\ttype='number'\r\n\t\t\t\tclassName='input'\r\n\t\t\t\tvalue={amount}\r\n\t\t\t\tonChange={onChangeAmount}\r\n\t\t\t/>\r\n\t\t\t<select onChange={onChangeCurrency} value={selectedCurrency}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\n\nfunction App() {\n\tconst [currencyOptions, setCurrencyOptions] = useState([]);\n\tconst [formCurrency, setFormCurrency] = useState(0);\n\tconst [toCurrency, setToCurrency] = useState(0);\n\tconst [exchangeRate, setExchangeRate] = useState(0);\n\tconst [amount, setAmount] = useState(1);\n\tconst [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\tconst [time, setTime] = useState('');\n\n\tlet toAmount, fromAmout;\n\tif (amountInFromCurrency) {\n\t\tfromAmout = amount;\n\t\ttoAmount = fromAmout * exchangeRate;\n\t} else {\n\t\ttoAmount = amount;\n\t\tfromAmout = toAmount / exchangeRate;\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(BASE_URL)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst firstCurrency = Object.keys(data.rates)[0];\n\t\t\t\tsetCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n\t\t\t\tsetFormCurrency(data.base);\n\t\t\t\tsetToCurrency(firstCurrency);\n\t\t\t\tsetExchangeRate(data.rates[firstCurrency]);\n\t\t\t\tsetTime(data.date);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (formCurrency !== 0 && toCurrency !== 0) {\n\t\t\tfetch(`${BASE_URL}?base=${formCurrency}&symbols=${toCurrency}`)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(data => setExchangeRate(data.rates[toCurrency]));\n\t\t}\n\t}, [formCurrency, toCurrency]);\n\n\tconst onChangeFromCurrency = e => setFormCurrency(e.target.value);\n\tconst onChangeToCurrency = e => setToCurrency(e.target.value);\n\n\tconst handleFromAmountChange = e => {\n\t\tsetAmount(e.target.value);\n\t\tsetAmountInFromCurrency(true);\n\t};\n\tconst handleToAmountChange = e => {\n\t\tsetAmount(e.target.value);\n\t\tsetAmountInFromCurrency(false);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<h2>Convert</h2>\n\t\t\t<p>The last date update: {time}</p>\n\t\t\t<CurrencyRow\n\t\t\t\tcurrencyOptions={currencyOptions}\n\t\t\t\tselectedCurrency={formCurrency}\n\t\t\t\tonChangeCurrency={onChangeFromCurrency}\n\t\t\t\tamount={fromAmout}\n\t\t\t\tonChangeAmount={handleFromAmountChange}\n\t\t\t/>\n\t\t\t<div className='equals'>=</div>\n\t\t\t<CurrencyRow\n\t\t\t\tcurrencyOptions={currencyOptions}\n\t\t\t\tselectedCurrency={toCurrency}\n\t\t\t\tonChangeCurrency={onChangeToCurrency}\n\t\t\t\tamount={toAmount}\n\t\t\t\tonChangeAmount={handleToAmountChange}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}